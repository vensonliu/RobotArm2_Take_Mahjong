cmake_minimum_required(VERSION 2.8)

# Set variables
set(PROJECT_NAME lib)
set(PROJECT_LANGUAGE CXX)
FILE(GLOB PROJECT_HEADERS
	${CMAKE_CURRENT_SOURCE_DIR}/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/CMD/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/Camera/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/Hsv/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/PID/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/Serial/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/RobotArm/*.h
	)

# Compile setting
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++14 -fexceptions")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

# Variables
set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "Build confugure" FORCE)
if(DEFINED CMAKE_BUILD_TYPE)
	set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS ${CMAKE_CONFIGURATION_TYPES})
endif()
if(NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE Release)
endif()

# Set project
project(${PROJECT_NAME} ${PROJECT_LANGUAGE})

# Add definition
if(CMAKE_BUILD_TYPE MATCHES Debug)
	add_definitions(-DDEBUG)
endif()

# Include directory
include_directories(${CMAKE_CURRENT_SOURCE_DIR})
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/Camera)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/CMD)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/Hsv)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/PID)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/Serial)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/RobotArm)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/Socket)


# Set file list
file(GLOB PROJECT_SRCS
	${CMAKE_CURRENT_SOURCE_DIR}/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/CMD/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/Camera/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/Hsv/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/PID/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/Serial/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/RobotArm/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/Socket/*.cpp
	)

# Build library
add_library(${PROJECT_NAME} STATIC ${PROJECT_SRCS})
set_target_properties(${PROJECT_NAME}
	PROPERTIES
	OUTPUT_NAME			${PROJECT_NAME}
		PREFIX			"lib"
	)

FILE(GLOB PROJECT_ASSETS ${CMAKE_CURRENT_SOURCE_DIR}/Hsv_setting/*.ini)
FILE(GLOB ANN_MODEL ${CMAKE_CURRENT_SOURCE_DIR}/model/*.vgn)

# Install
install(TARGETS ${PROJECT_NAME}
	RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin"
	ARCHIVE DESTINATION "${CMAKE_INSTALL_PREFIX}/lib"
	LIBRARY DESTINATION "${CMAKE_INSTALL_PREFIX}/lib"
	PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_PREFIX}/include"
	)
install(FILES ${PROJECT_HEADERS}
	DESTINATION "${CMAKE_INSTALL_PREFIX}/include"
	)

install(FILES ${PROJECT_ASSETS}
	DESTINATION "${CMAKE_INSTALL_PREFIX}/assets"
	)

install(FILES ${ANN_MODEL}
	DESTINATION "${CMAKE_INSTALL_PREFIX}/assets/model"
	)
